class DbEntity
{
public:
	string m_tableName;

	map<string, int*> m_feildNameIntMap;

	void bindTableName(string tableName)
	{
		m_tableName = tableName;
	}

	void bindIntFeild(string feildName, int* member)
	{
		m_feildNameIntMap[feildName] = member;
	}
};

class Test : public DbEntity
{
public:
	int m_id;

public:
	Test() { bindIntFeild("id", &m_id); }
	
};


说明：
    1 参考上面的方式实现Mysql的数据库操作类。 实现节点和属性绑定
	 
	2   数据量太大需要测试效率问题，内存使用过多。